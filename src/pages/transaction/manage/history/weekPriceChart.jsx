import ReactECharts from "echarts-for-react";
import { useEffect, useState } from "react";
import * as echarts from "echarts";
import { theme as antdTheme } from "antd";
import { useSelector } from "umi";

const colorList = ["#9E87FF", '#73DDFF', '#fe9a8b', '#F56948', '#9E87FF'];

const WeekPriceChart = () => {
    const { token } = antdTheme.useToken();
    const { theme } = useSelector(state => state.global);
    const [options, setOptions] = useState({});

    const getOptions = () => {
        setOptions({
            legend: {
                icon: 'circle',
                top: '5%',
                right: '5%',
                itemWidth: 6,
                itemGap: 20,
                textStyle: {
                    color: token.color11
                }
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    label: {
                        show: true,
                        backgroundColor: '#fff',
                        color: '#556677',
                        borderColor: 'rgba(0,0,0,0)',
                        shadowColor: 'rgba(0,0,0,0)',
                        shadowOffsetY: 0
                    },
                    lineStyle: {
                        width: 0
                    }
                },
                backgroundColor: '#fff',
                textStyle: {
                    color: '#5c6c7c'
                },
                padding: [10, 10],
                extraCssText: 'box-shadow: 1px 0 2px 0 rgba(163,163,163,0.5)'
            },
            grid: {
                top: 30,
                bottom: 75,
                left: 50,
                right: 50
            },
            dataZoom: [
                {
                    show: true,
                    start: 0,
                    end: 15
                },
            ],
            xAxis: [{
                type: 'category',
                data: [
                    '02-27 01:00', '02-27 02:00', '02-27 03:00', '02-27 04:00', '02-27 05:00', '02-27 06:00', '02-27 07:00', '02-27 08:00', '02-27 09:00', '02-27 10:00', '02-27 11:00', '02-27 12:00', '02-27 13:00', '02-27 14:00', '02-27 15:00', '02-27 16:00', '02-27 17:00', '02-27 18:00', '02-27 19:00', '02-27 20:00', '02-27 21:00', '02-27 22:00', '02-27 23:00',
                    '02-28 01:00', '02-28 02:00', '02-28 03:00', '02-28 04:00', '02-28 05:00', '02-28 06:00', '02-28 07:00', '02-28 08:00', '02-28 09:00', '02-28 10:00', '02-28 11:00', '02-28 12:00', '02-28 13:00', '02-28 14:00', '02-28 15:00', '02-28 16:00', '02-28 17:00', '02-28 18:00', '02-28 19:00', '02-28 20:00', '02-28 21:00', '02-28 22:00', '02-28 23:00',
                    '02-29 01:00', '02-29 02:00', '02-29 03:00', '02-29 04:00', '02-29 05:00', '02-29 06:00', '02-29 07:00', '02-29 08:00', '02-29 09:00', '02-29 10:00', '02-29 11:00', '02-29 12:00', '02-29 13:00', '02-29 14:00', '02-29 15:00', '02-29 16:00', '02-29 17:00', '02-29 18:00', '02-29 19:00', '02-29 20:00', '02-29 21:00', '02-29 22:00', '02-29 23:00',
                    '03-01 01:00', '03-01 02:00', '03-01 03:00', '03-01 04:00', '03-01 05:00', '03-01 06:00', '03-01 07:00', '03-01 08:00', '03-01 09:00', '03-01 10:00', '03-01 11:00', '03-01 12:00', '03-01 13:00', '03-01 14:00', '03-01 15:00', '03-01 16:00', '03-01 17:00', '03-01 18:00', '03-01 19:00', '03-01 20:00', '03-01 21:00', '03-01 22:00', '03-01 23:00',
                    '03-02 01:00', '03-02 02:00', '03-02 03:00', '03-02 04:00', '03-02 05:00', '03-02 06:00', '03-02 07:00', '03-02 08:00', '03-02 09:00', '03-02 10:00', '03-02 11:00', '03-02 12:00', '03-02 13:00', '03-02 14:00', '03-02 15:00', '03-02 16:00', '03-02 17:00', '03-02 18:00', '03-02 19:00', '03-02 20:00', '03-02 21:00', '03-02 22:00', '03-02 23:00',
                    '03-03 01:00', '03-03 02:00', '03-03 03:00', '03-03 04:00', '03-03 05:00', '03-03 06:00', '03-03 07:00', '03-03 08:00', '03-03 09:00', '03-03 10:00', '03-03 11:00', '03-03 12:00', '03-03 13:00', '03-03 14:00', '03-03 15:00', '03-03 16:00', '03-03 17:00', '03-03 18:00', '03-03 19:00', '03-03 20:00', '03-03 21:00', '03-03 22:00', '03-03 23:00',
                    '03-04 01:00', '03-04 02:00', '03-04 03:00', '03-04 04:00', '03-04 05:00', '03-04 06:00', '03-04 07:00', '03-04 08:00', '03-04 09:00', '03-04 10:00', '03-04 11:00', '03-04 12:00', '03-04 13:00', '03-04 14:00', '03-04 15:00', '03-04 16:00', '03-04 17:00', '03-04 18:00', '03-04 19:00', '03-04 20:00', '03-04 21:00', '03-04 22:00', '03-04 23:00',
                ],
                axisLine: {
                    lineStyle: {
                        color: '#DCE2E8'
                    }
                },
                axisTick: {
                    show: false
                },
                axisLabel: {
                    textStyle: {
                        color: '#556677'
                    },
                    // 默认x轴字体大小
                    fontSize: 12,
                    // margin:文字到x轴的距离
                    margin: 15
                },
                axisPointer: {
                    label: {
                        padding: [0, 0, 10, 0],
                        margin: 15,
                        // 移入时的字体大小
                        fontSize: 12,
                        backgroundColor: {
                            type: 'linear',
                            x: 0,
                            y: 0,
                            x2: 0,
                            y2: 1,
                            colorStops: [{
                                offset: 0,
                                color: '#fff' // 0% 处的颜色
                            }, {
                                // offset: 0.9,
                                offset: 0.86,
                                color: '#fff' // 0% 处的颜色
                            }, {
                                offset: 0.86,
                                color: '#33c0cd' // 0% 处的颜色
                            }, {
                                offset: 1,
                                color: '#33c0cd' // 100% 处的颜色
                            }],
                            global: false // 缺省为 false
                        }
                    }
                },
                boundaryGap: false
            }],
            yAxis: {
                type: 'value',
                name: '价格(元/MWh)',
                axisTick: {
                    show: false
                },
                axisLine: {
                    show: true,
                    lineStyle: {
                        color: '#DCE2E8'
                    }
                },
                axisLabel: {
                    textStyle: {
                        color: '#556677'
                    }
                },
                splitLine: {
                    show: false
                },
            },
            series: [{
                    name: '日前预测电价',
                    type: 'line',
                    data: [
                        500,400,400,500,600,700,750,850,900,800,700,500,400,600,620,800,1000,1050,800,600,500,300, 300,
                        500,420,420,510,590,710,740,840,900,800,700,500,400,600,620,800,1000,1050,800,600,500,300, 300,
                        500,430,430,520,600,720,751,830,900,800,700,500,400,600,620,800,1000,1050,800,600,500,300, 300,
                        500,420,430,520,610,690,743,830,900,800,700,500,400,600,620,800,1000,1050,800,600,500,300, 300,
                        500,410,440,510,621,680,744,860,900,800,700,500,400,600,620,800,1000,1050,800,600,500,300, 300,
                        500,450,430,490,612,710,743,854,900,800,700,500,400,600,620,800,1000,1050,800,600,500,300, 300,
                        500,430,420,500,610,713,740,823,900,800,700,500,400,600,620,800,1000,1050,800,600,500,300, 300,
                    ],
                    symbolSize: 1,
                    symbol: 'circle',
                    yAxisIndex: 0,
                    showSymbol: false,
                    lineStyle: {
                        width: 5,
                        color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [{
                                offset: 0,
                                color: '#9effff'
                            },
                            {
                                offset: 1,
                                color: '#9E87FF'
                            }
                        ]),
                        shadowColor: 'rgba(158,135,255, 0.3)',
                        shadowBlur: 10,
                        shadowOffsetY: 20
                    },
                    itemStyle: {
                        normal: {
                            color: colorList[0],
                            borderColor: colorList[0]
                        }
                    }
                }, {
                    name: '日前出清电价',
                    type: 'line',
                    data: [
                        600,500,450,550,700,660,850,900,950,700,600,500,450,660,700,900,1300,1250,900,600,550,300,250,
                        600,500,450,550,700,660,850,900,950,700,600,500,450,660,700,900,1300,1250,900,600,550,300,250,
                        600,500,450,550,700,660,850,900,950,700,600,500,450,660,700,900,1300,1250,900,600,550,300,250,
                        600,500,450,550,700,660,850,900,950,700,600,500,450,660,700,900,1300,1250,900,600,550,300,250,
                        600,500,450,550,700,660,850,900,950,700,600,500,450,660,700,900,1300,1250,900,600,550,300,250,
                        600,500,450,550,700,660,850,900,950,700,600,500,450,660,700,900,1300,1250,900,600,550,300,250,
                        600,500,450,550,700,660,850,900,950,700,600,500,450,660,700,900,1300,1250,900,600,550,300,250,
                    ],
                    symbolSize: 1,
                    symbol: 'circle',
                    yAxisIndex: 0,
                    showSymbol: false,
                    lineStyle: {
                        width: 5,
                        color: new echarts.graphic.LinearGradient(1, 1, 0, 0, [{
                                offset: 0,
                                color: '#73DD39'
                            },
                            {
                                offset: 1,
                                color: '#73DDFF'
                            }
                        ]),
                        shadowColor: 'rgba(115,221,255, 0.3)',
                        shadowBlur: 10,
                        shadowOffsetY: 20
                    },
                    itemStyle: {
                        normal: {
                            color: colorList[1],
                            borderColor: colorList[1]
                        }
                    }
                }
            ]
        })
    }
    
    useEffect(() => {
        getOptions();
    }, [theme])

    return (
        <ReactECharts  
            option={options} 
            style={{ width: '100%', height: '400px' }} 
        />
    )
}

export default WeekPriceChart;